{"version":3,"sources":["conatiners/dashboard/dashboard.style.js","conatiners/dashboard/dashBoard.js","conatiners/dashboard/dashboard.action.js","conatiners/movieDetails/movieDetails.style.js","conatiners/movieDetails/movieDetails.js","conatiners/movieDetails/movieDetails.action.js","conatiners/home/home.style.js","conatiners/home/home.js","App.js","conatiners/dashboard/dashboard.reducer.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["styles","root","maxWidth","paddingForCard","padding","typography","color","media","height","paddingTop","cursor","avatar","backgroundColor","search","position","borderRadius","border","marginLeft","width","searchIcon","pointerEvents","display","alignItems","justifyContent","inputInput","inputRoot","header","top","DashBoard","props","changeFilterType","event","target","value","state","filterType","setState","updateFavourites","cardDetails","console","log","addToFavourites","searchedMovieName","page","redirect","searchForMovie","bind","handleScroll","this","movieList","apiKey","windowHeight","window","innerHeight","document","documentElement","offsetHeight","body","html","docHeight","Math","max","scrollHeight","clientHeight","pageYOffset","totalResults","fetchMovieListNextCycle","addEventListener","removeEventListener","trim","fetchMovieList","movie","selectedMovie","classes","allMovies","notificationMsg","to","imdbID","Grid","container","justify","item","xs","sm","md","className","InputBase","id","onBlur","changeInput","placeholder","input","inputProps","name","onChange","key","map","Button","variant","onClick","Typography","component","length","index","Card","CardHeader","title","Title","subheader","Year","CardMedia","image","Poster","movieDetails","React","Component","connect","DashBoardReducer","favourite","favourites","dispatch","payload","type","movieName","fetch","then","response","json","Response","catch","error","withStyles","expand","transform","expandOpen","MovieDetails","reDirect","handleExpandClick","params","match","fetchMovieDetail","unMountMovieList","expanded","searchedMovie","Object","keys","CardContent","paragraph","Actors","Director","Production","Genre","imdbRating","Plot","IMDB_ID","accountLink","appBar","content","flexGrow","marginTop","minHeight","boxSizing","contentOpen","drawerPaper","maxHeight","overflowX","overflowY","whiteSpace","zIndex","drawerPaperClose","footerContainer","left","right","bottom","hide","loaderLine","menuButton","marginRight","portalName","fontSize","space","toolbar","HomePage","open","mainClassCss","classNames","contentClose","style","exact","path","withWidth","App","Home","INITIAL_STATE","action","filetrArray","filter","Search","slice","combineReducers","history","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","applyMiddleware","store","createStore","connectRouter","rootReducer","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a562401c.chunk.js","sourcesContent":["const styles = () => {\n    return {\n        root: {\n            maxWidth: 345,\n        },\n        paddingForCard: {\n            padding: '22px'\n        },\n        typography: {\n            color: '#fff'\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\n            cursor: 'pointer'\n        },\n        avatar: {\n            backgroundColor: 'red',\n        },\n        search: {\n            position: 'relative',\n            borderRadius: '2px',\n            backgroundColor: '#0000008f',\n            border: '2px solid #0080006b',\n            '&:hover': {\n                backgroundColor: '#000000',\n                cursor: 'pointer',\n                border: '2px solid #0080008f'\n            },\n            marginLeft: 0,\n            width: '100%',\n\n        },\n        searchIcon: {\n            padding: '1px',\n            height: '100%',\n            position: 'absolute',\n            pointerEvents: 'none',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        inputInput: {\n            // vertical padding + font size from searchIcon\n            width: '100%',\n        },\n        inputRoot: {\n            color: 'inherit',\n        },\n        header: {\n            position: 'fixed',\n            top: 0,\n            display: 'flex',\n        }\n    }\n};\nexport default styles;\n","/* eslint-disable no-unused-expressions */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { fetchMovieList, fetchMovieListNextCycle, addToFavourites } from './dashboard.action';\nimport { Button, Grid, withStyles } from '@material-ui/core';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport FavouriteIcon from '@material-ui/icons/FavoriteBorder';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './dashboard.style';\n\nclass DashBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchedMovieName: '',\n            page: 1,\n            redirect: false,\n            filterType: 'all',\n        }\n        this.searchForMovie = this.searchForMovie.bind(this);\n        this.handleScroll = this.handleScroll.bind(this);\n    };\n    handleScroll() {\n        const { movieList, apiKey } = this.props;\n        const { searchedMovieName, page } = this.state;\n        const windowHeight = \"innerHeight\" in window ? window.innerHeight : document.documentElement.offsetHeight;\n        const body = document.body;\n        const html = document.documentElement;\n        const docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n        const windowBottom = windowHeight + window.pageYOffset;\n        if (windowBottom >= docHeight - 1 && movieList.totalResults > page * 10) {\n            this.props.fetchMovieListNextCycle(apiKey, searchedMovieName, page + 1, this.state.filterType);\n            this.setState({ page: page + 1 })\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"scroll\", this.handleScroll);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"scroll\", this.handleScroll);\n    }\n\n    changeInput(event) {\n        this.setState({ searchedMovieName: event.target.value.trim() });\n    }\n\n    searchForMovie() {\n        const { apiKey } = this.props;\n        const { searchedMovieName } = this.state;\n        if (searchedMovieName) {\n            this.props.fetchMovieList(apiKey, searchedMovieName, this.state.filterType);\n        }\n    }\n\n    movieDetails(movie) {\n        this.setState({ redirect: true, selectedMovie: movie });\n    }\n\n    changeFilterType = (event) => {\n        if (event.target.value !== this.state.filterType) {\n            this.setState({ filterType: event.target.value })\n        }\n    }\n\n    updateFavourites = (cardDetails) => {\n        console.log(cardDetails)\n        this.props.addToFavourites(cardDetails);\n    }\n\n    render() {\n        const { redirect, selectedMovie } = this.state;\n        const { classes, allMovies, notificationMsg } = this.props;\n        if (redirect && selectedMovie) {\n            return (<Redirect to={`/movieDetails/${selectedMovie.imdbID}`} />)\n        }\n        const filterDetails = [{ key: 'all', value: 'All' }, { key: 'movies', value: 'Movies' }, { key: 'series', value: 'Series' }, { key: 'episods', value: 'Episods' }];\n        return (\n            <Grid container justify={'center'} >\n                <Grid item xs={12}>\n                    <Grid container justify={'center'}>\n                        <Grid item xs={11} sm={8} md={6}>\n                            <div className={classes.search}>\n                                <div>\n                                    <div className={classes.searchIcon}>\n                                        &nbsp;\n                                    <SearchIcon />\n                                    </div>\n                                    <InputBase\n                                        id=\"search-input\"\n                                        onBlur={this.changeInput.bind(this)}\n                                        placeholder=\"Search for Movie Name\"\n                                        classes={{\n                                            root: classes.inputRoot,\n                                            input: classes.inputInput,\n                                        }}\n                                        inputProps={{ 'aria-label': 'search' }}\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <select name=\"type\" id=\"selectType\" onChange={this.changeFilterType}>\n                                    {filterDetails.map((item) => (\n                                        <option key={item.key} value={item.key}>{item.value}</option>\n                                    ))}\n                                </select>\n                            </div>\n\n                        </Grid>\n\n                        <Grid item xs={10} sm={3} md={2}>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.searchForMovie}>Search</Button>\n                        </Grid>\n                    </Grid>\n                    <br />\n                    {notificationMsg && <Grid item xs={11} sm={8} md={10}><Typography variant=\"body2\" component=\"p\" className={classes.typography} >{notificationMsg}</Typography></Grid>}\n\n                    <Grid container >\n                        {allMovies.length > 0 && allMovies.map((movie, index) => {\n                            return (\n                            <Grid item xs={11} sm={6} md={4} className={classes.paddingForCard} key={index}>\n                                <Card className={classes.root}>\n                                    <CardHeader\n                                        title={movie.Title}\n                                        subheader={movie.Year}\n                                    />\n                                    <CardMedia\n                                        className={classes.media}\n                                        image={movie.Poster}\n                                        title={movie.Title}\n                                        onClick={this.movieDetails.bind(this, movie)}\n                                    />\n                                </Card>\n                            </Grid>\n                            )\n                        })}\n\n                    </Grid>\n                </Grid>\n                <div className=\"scrollDiv\"></div>\n            </Grid>\n        );\n    }\n}\n\nconst mapStateToProps = ({\n    DashBoardReducer\n}) => ({\n    apiKey: DashBoardReducer.apiKey,\n    allMovies: DashBoardReducer.allMovies,\n    movieList: DashBoardReducer.movieList,\n    notificationMsg: DashBoardReducer.notificationMsg,\n    favourite: DashBoardReducer.favourites\n});\nexport default connect(mapStateToProps, { addToFavourites, fetchMovieList, fetchMovieListNextCycle })(withStyles(styles)(DashBoard));","\nexport const fetchMovieList = (apiKey, movieName, type) => (dispatch) => {\n      dispatch({type: 'CLEAR_MOVIE_DETAILS'})\n      return fetch(`https://www.omdbapi.com/?apikey=${apiKey}&s=${movieName}&page=1${type !== 'all' ? `&type=${type}` : ''}`)\n            .then(response => response.json())\n            .then(json => {\n                  if (json.Response === 'False') {\n                        dispatch({ payload: 'Record Not Found', type: 'MOVIE_RECORD_MISSING' })\n                  }\n                  else {\n                        dispatch({ payload: json, type: 'FETCH_MOVIE_LIST' })\n                  }\n            }\n            )\n            .catch(error => dispatch({ payload: 'oops ,Somthing went wrong,Please try agin later', type: 'NETWORK_ERROR' }));\n}\n\nexport const fetchMovieListNextCycle = (apiKey, movieName, page, type) => (dispatch) => {\n      return fetch(`https://www.omdbapi.com/?apikey=${apiKey}&s=${movieName}${type !== 'all' ? `&type=${type}` : ''}&page=${page}`)\n            .then(response => response.json())\n            .then(json => {\n                  if (json.Response === 'False') {\n                        dispatch({ payload: 'Record Not Found', type: 'MOVIE_RECORD_MISSING' })\n                  }\n                  else {\n                        dispatch({ payload: json, type: 'FETCH_MOVIE_LIST_MORE' })\n                  }\n            }\n            )\n            .catch(error => dispatch({ payload: 'oops ,Somthing went wrong,Please try agin later', type: 'NETWORK_ERROR' }));\n}\n\nexport const addToFavourites = (movie) => (dispatch) => {\n      return dispatch({ payload: movie, type: 'ADD_TO_FAVOURITES' })\n}\n\nexport const removeFromFavourites = (movie) => (dispatch) => {\n      return dispatch({ payload: movie, type: 'REMOVE_FROM_FAVOURITES' })\n}\n\n","const styles = () => {\n    return {\n          media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\n          },\n          expand: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n          },\n          expandOpen: {\n            transform: 'rotate(180deg)',\n          },\n         \n    }\n};\nexport default styles;\n","/* eslint-disable no-unused-expressions */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Grid, withStyles } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { fetchMovieDetail, unMountMovieList } from './movieDetails.action';\nimport CardContent from '@material-ui/core/CardContent';\nimport styles from './movieDetails.style';\nclass MovieDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            reDirect: false\n        }\n        this.handleExpandClick = this.handleExpandClick.bind(this);\n    };\n    componentDidMount() {\n        const { apiKey, match } = this.props;\n        const { params } = match;\n        if (params.id) {\n            this.props.fetchMovieDetail(apiKey, params.id);\n        }\n    }\n    componentWillUnmount() {\n        this.props.unMountMovieList();\n    }\n    handleExpandClick() {\n        this.setState({ expanded: true });\n    }\n\n\n    render() {\n        const { searchedMovie, classes } = this.props;\n        const { reDirect } = this.state;\n        if (reDirect) {\n            return (<Redirect to={'/'} />);\n        }\n        return (\n            <Grid container justify={'center'} >\n                <Grid item xs={11} sm={9} md={6} >\n                    {Object.keys(searchedMovie).length > 0 ?\n                        <Card >\n                            <CardHeader\n\n                                title={searchedMovie.Title}\n                                subheader={searchedMovie.Year}\n                            />\n                            <CardMedia\n                                className={classes.media}\n                                image={searchedMovie.Poster}\n                                title={searchedMovie.Title}\n                            />\n                            <CardContent>\n                                <Grid container >\n                                    <Grid item xs={12}>\n                                        <b> Actors :</b><Typography paragraph>{searchedMovie.Actors}</Typography>\n                                        <b>Director :</b><Typography paragraph>{searchedMovie.Director}</Typography>\n                                        <b>Production :</b><Typography paragraph>{searchedMovie.Production}</Typography>\n                                        <b>Genre :</b><Typography paragraph>{searchedMovie.Genre}</Typography>\n                                        <b>imdbRating:</b><Typography paragraph>{searchedMovie.imdbRating}</Typography>\n\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                            {searchedMovie.Plot}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card> : <Typography paragraph>\n                            Record not Found\n                            </Typography>}\n                    <br />\n                    <Button variant=\"contained\" color=\"secondary\" onClick={() => { this.setState({ reDirect: true }) }}>\n                        Back\n      </Button>\n                </Grid>\n            </Grid>\n        );\n    }\n}\nconst mapStateToProps = ({\n    DashBoardReducer\n}) => ({\n    apiKey: DashBoardReducer.apiKey,\n    searchedMovie: DashBoardReducer.searchedMovie\n});\nexport default connect(mapStateToProps, { fetchMovieDetail, unMountMovieList })(withStyles(styles)(MovieDetails));","export const fetchMovieDetail = (apiKey, IMDB_ID) => (dispatch) => {\n\n    return fetch(`https://www.omdbapi.com/?apikey=${apiKey}&i=${IMDB_ID}`)\n        .then(response => response.json())\n        .then(json => {\n            if (json.Response === 'False') {\n                dispatch({ payload: 'Record Not Found', type: 'MOVIE_RECORD_MISSING' })\n            }\n            else {\n                dispatch({ payload: json, type: 'FETCH_SEARCHED_MOVIE_DETAILS' })\n            }\n        }\n        )\n        .catch(error => dispatch({ payload: 'oops ,Somthing went wrong,Please try agin later', type: 'NETWORK_ERROR' }));\n}\nexport const unMountMovieList = () => (dispatch) => {\n    dispatch({\n        type: 'UN_MOUNT_MOVIE_LIST'\n    })\n}","const styles = () => {\n  return {\n    accountLink: {\n      '&:hover': {\n        color: '#0086d1'\n      },\n      color: '#0066c0',\n      cursor: 'pointer'\n    },\n    appBar: {\n      position: 'fixed',\n      width: '100%'\n    },\n    content: {\n      flexGrow: 1,\n      marginTop: '12px',\n\n\n      padding: '3px',\n\n      width: 'calc(100% - 72px)',\n      position: 'relative',\n      minHeight: 'calc(100vh - 115px - 12px)',\n      boxSizing: 'border-box',\n    },\n\n    contentOpen: {\n      width: '100%',\n      marginTop: '11px'\n    },\n    drawerPaper: {\n      '& .MuiListItemIcon-root-68': {\n        color: 'white'\n      },\n      '& span': {\n        color: 'white'\n      },\n      backgroundColor: '#1f5a9e !important',\n      color: 'white',\n      marginTop: '57px',\n      maxHeight: '92vh',\n      overflowX: 'hidden',\n      overflowY: 'auto',\n      position: 'fixed',\n\n      whiteSpace: 'nowrap',\n      width: 225,\n      zIndex: '1'\n    },\n    drawerPaperClose: {\n      overflowX: 'hidden',\n      width: '46px'\n    },\n    footerContainer: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      bottom: '-115px',\n      zIndex: -1,\n    },\n    hide: {\n      display: 'none'\n    },\n\n  \n    loaderLine: {\n      flexGrow: 1,\n      position: 'fixed',\n      top: '60px',\n      width: '100%',\n      zIndex: 4\n    },\n    menuButton: {\n      marginLeft: 12,\n      marginRight: 36\n    },\n    portalName: {\n      left: '100px'\n    },\n    root: {\n      color: 'grey',\n      display: 'flex',\n      flexGrow: 1,\n      fontSize: '13px',\n      position: 'relative',\n      zIndex: 1\n    },\n    space: {\n      marginTop: '25px'\n    },\n    toolbar: {\n      alignItems: 'center',\n      display: 'flex',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n    }\n  };\n};\nexport default styles;\n","import {\n  Route,\n} from 'react-router-dom';\nimport { withStyles, withWidth } from '@material-ui/core';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport DashBoard from '../dashboard/dashBoard';\nimport MovieDetails from '../movieDetails/movieDetails';\nimport styles from './home.style';\n\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: true\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    const mainClassCss = classNames(\n      classes.content,\n      this.state.open ? classes.contentOpen : classes.contentClose,\n    );\n    return (\n      <div style={{\n        display: 'flex',\n        flexGrow: 1,\n        // height: '97vh',\n        width: '100%',\n        position: 'relative',\n        zIndex: 1\n      }}>\n        <main className={mainClassCss}>\n          <div className={classes.toolbar} />\n          <div style={{ marginTop: '60px' }}>\n            {/* <Switch> */}\n              <Route exact path=\"/\" component={DashBoard} key=\"AppHome\" />\n              <Route exact path={`/movieDetails/:id`} component={MovieDetails} key=\"AppHome\" />\n            {/* </Switch> */}\n          </div>\n        </main>\n      </div >\n    );\n  }\n\n}\nexport default ((withWidth()(withStyles(styles)(HomePage))));\n// export default withRouter((withWidth()(withStyles(styles)(HomePage))));\n","import React from 'react';\nimport {\n  HashRouter, Switch, Route,\n} from 'react-router-dom';\nimport './App.css';\nimport Home from './conatiners/home/home';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <HashRouter>\n          <Switch>\n            <Route exact={false} path=\"/\" component={Home} key=\"AppLogin\" />\n          </Switch>\n        </HashRouter>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const INITIAL_STATE = {\n    allMovies: [],\n    movieList: {},\n    apiKey: 'b9bd48a6',\n    notificationMsg: '',\n    searchedMovie: {},\n    favourites: []\n};\nconst DashBoardReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case 'CLEAR_MOVIE_DETAILS': return {...state, movieList: {}, allMovies: []}\n        case 'ADD_TO_FAVOURITES': return {...state, favourites: [...state.favourites, action.payload]}\n        case 'REMOVE_FROM_FAVOURITES': {\n            if(action.payload.imdbID) {\n                const filetrArray = state.favourites.filter((item) => (item.imdbID !== action.payload.imdbID))\n                return {...state, favourites: filetrArray}\n            }\n        }\n        case 'FETCH_MOVIE_LIST': return { ...state, movieList: action.payload, notificationMsg: '', allMovies: action.payload.Search }\n        case 'MOVIE_RECORD_MISSING': return { ...state, notificationMsg: action.payload }\n        case 'NETWORK_ERROR': return { ...state, notificationMsg: action.payload }\n        case 'FETCH_MOVIE_LIST_MORE': return { ...state, movieList: action.payload, allMovies: [...state.allMovies.slice(0, state.allMovies.length - 1), ...action.payload.Search, ...state.allMovies.slice(0)] }\n        case 'FETCH_SEARCHED_MOVIE_DETAILS': return { ...state, searchedMovie: action.payload }\n        case 'UN_MOUNT_MOVIE_LIST': return INITIAL_STATE\n        default:\n            return state;\n    }\n};\nexport default DashBoardReducer;","import { combineReducers } from \"redux\";\nimport DashBoardReducer from '../conatiners/dashboard/dashboard.reducer';\n\nexport default combineReducers({ DashBoardReducer });\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport createHistory from 'history/createBrowserHistory'\nimport rootReducer from '../src/reducers';\nimport ReduxLogger from 'redux-logger';\n\nexport const history = createHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [\n  thunk,\n  routerMiddleware(history)\n]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension());\n    enhancers.push(ReduxLogger);\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nconst store = createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers\n)\n\nexport default store\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store'\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n   <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}